//go:build go1.8
// +build go1.8

// Code generated by "httpsnoop/codegen"; DO NOT EDIT.

package httpsnoop

import (
	"io"
	"net/http"
	"testing"
)

func TestWrap(t *testing.T) {
	// combination 1/128
	{
		t.Log("http.ResponseWriter")
		inner := struct {
			http.ResponseWriter
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 2/128
	{
		t.Log("http.ResponseWriter, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 3/128
	{
		t.Log("http.ResponseWriter, fullDuplexEnabler")
		inner := struct {
			http.ResponseWriter
			fullDuplexEnabler
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 4/128
	{
		t.Log("http.ResponseWriter, fullDuplexEnabler, http.Pusher")
		inner := struct {
			http.ResponseWriter
			fullDuplexEnabler
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 5/128
	{
		t.Log("http.ResponseWriter, deadliner")
		inner := struct {
			http.ResponseWriter
			deadliner
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 6/128
	{
		t.Log("http.ResponseWriter, deadliner, http.Pusher")
		inner := struct {
			http.ResponseWriter
			deadliner
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 7/128
	{
		t.Log("http.ResponseWriter, deadliner, fullDuplexEnabler")
		inner := struct {
			http.ResponseWriter
			deadliner
			fullDuplexEnabler
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 8/128
	{
		t.Log("http.ResponseWriter, deadliner, fullDuplexEnabler, http.Pusher")
		inner := struct {
			http.ResponseWriter
			deadliner
			fullDuplexEnabler
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 9/128
	{
		t.Log("http.ResponseWriter, io.ReaderFrom")
		inner := struct {
			http.ResponseWriter
			io.ReaderFrom
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 10/128
	{
		t.Log("http.ResponseWriter, io.ReaderFrom, http.Pusher")
		inner := struct {
			http.ResponseWriter
			io.ReaderFrom
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 11/128
	{
		t.Log("http.ResponseWriter, io.ReaderFrom, fullDuplexEnabler")
		inner := struct {
			http.ResponseWriter
			io.ReaderFrom
			fullDuplexEnabler
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 12/128
	{
		t.Log("http.ResponseWriter, io.ReaderFrom, fullDuplexEnabler, http.Pusher")
		inner := struct {
			http.ResponseWriter
			io.ReaderFrom
			fullDuplexEnabler
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 13/128
	{
		t.Log("http.ResponseWriter, io.ReaderFrom, deadliner")
		inner := struct {
			http.ResponseWriter
			io.ReaderFrom
			deadliner
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 14/128
	{
		t.Log("http.ResponseWriter, io.ReaderFrom, deadliner, http.Pusher")
		inner := struct {
			http.ResponseWriter
			io.ReaderFrom
			deadliner
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 15/128
	{
		t.Log("http.ResponseWriter, io.ReaderFrom, deadliner, fullDuplexEnabler")
		inner := struct {
			http.ResponseWriter
			io.ReaderFrom
			deadliner
			fullDuplexEnabler
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 16/128
	{
		t.Log("http.ResponseWriter, io.ReaderFrom, deadliner, fullDuplexEnabler, http.Pusher")
		inner := struct {
			http.ResponseWriter
			io.ReaderFrom
			deadliner
			fullDuplexEnabler
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 17/128
	{
		t.Log("http.ResponseWriter, http.Hijacker")
		inner := struct {
			http.ResponseWriter
			http.Hijacker
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 18/128
	{
		t.Log("http.ResponseWriter, http.Hijacker, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Hijacker
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 19/128
	{
		t.Log("http.ResponseWriter, http.Hijacker, fullDuplexEnabler")
		inner := struct {
			http.ResponseWriter
			http.Hijacker
			fullDuplexEnabler
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 20/128
	{
		t.Log("http.ResponseWriter, http.Hijacker, fullDuplexEnabler, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Hijacker
			fullDuplexEnabler
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 21/128
	{
		t.Log("http.ResponseWriter, http.Hijacker, deadliner")
		inner := struct {
			http.ResponseWriter
			http.Hijacker
			deadliner
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 22/128
	{
		t.Log("http.ResponseWriter, http.Hijacker, deadliner, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Hijacker
			deadliner
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 23/128
	{
		t.Log("http.ResponseWriter, http.Hijacker, deadliner, fullDuplexEnabler")
		inner := struct {
			http.ResponseWriter
			http.Hijacker
			deadliner
			fullDuplexEnabler
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 24/128
	{
		t.Log("http.ResponseWriter, http.Hijacker, deadliner, fullDuplexEnabler, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Hijacker
			deadliner
			fullDuplexEnabler
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 25/128
	{
		t.Log("http.ResponseWriter, http.Hijacker, io.ReaderFrom")
		inner := struct {
			http.ResponseWriter
			http.Hijacker
			io.ReaderFrom
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 26/128
	{
		t.Log("http.ResponseWriter, http.Hijacker, io.ReaderFrom, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Hijacker
			io.ReaderFrom
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 27/128
	{
		t.Log("http.ResponseWriter, http.Hijacker, io.ReaderFrom, fullDuplexEnabler")
		inner := struct {
			http.ResponseWriter
			http.Hijacker
			io.ReaderFrom
			fullDuplexEnabler
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 28/128
	{
		t.Log("http.ResponseWriter, http.Hijacker, io.ReaderFrom, fullDuplexEnabler, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Hijacker
			io.ReaderFrom
			fullDuplexEnabler
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 29/128
	{
		t.Log("http.ResponseWriter, http.Hijacker, io.ReaderFrom, deadliner")
		inner := struct {
			http.ResponseWriter
			http.Hijacker
			io.ReaderFrom
			deadliner
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 30/128
	{
		t.Log("http.ResponseWriter, http.Hijacker, io.ReaderFrom, deadliner, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Hijacker
			io.ReaderFrom
			deadliner
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 31/128
	{
		t.Log("http.ResponseWriter, http.Hijacker, io.ReaderFrom, deadliner, fullDuplexEnabler")
		inner := struct {
			http.ResponseWriter
			http.Hijacker
			io.ReaderFrom
			deadliner
			fullDuplexEnabler
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 32/128
	{
		t.Log("http.ResponseWriter, http.Hijacker, io.ReaderFrom, deadliner, fullDuplexEnabler, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Hijacker
			io.ReaderFrom
			deadliner
			fullDuplexEnabler
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 33/128
	{
		t.Log("http.ResponseWriter, http.CloseNotifier")
		inner := struct {
			http.ResponseWriter
			http.CloseNotifier
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 34/128
	{
		t.Log("http.ResponseWriter, http.CloseNotifier, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.CloseNotifier
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 35/128
	{
		t.Log("http.ResponseWriter, http.CloseNotifier, fullDuplexEnabler")
		inner := struct {
			http.ResponseWriter
			http.CloseNotifier
			fullDuplexEnabler
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 36/128
	{
		t.Log("http.ResponseWriter, http.CloseNotifier, fullDuplexEnabler, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.CloseNotifier
			fullDuplexEnabler
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 37/128
	{
		t.Log("http.ResponseWriter, http.CloseNotifier, deadliner")
		inner := struct {
			http.ResponseWriter
			http.CloseNotifier
			deadliner
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 38/128
	{
		t.Log("http.ResponseWriter, http.CloseNotifier, deadliner, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.CloseNotifier
			deadliner
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 39/128
	{
		t.Log("http.ResponseWriter, http.CloseNotifier, deadliner, fullDuplexEnabler")
		inner := struct {
			http.ResponseWriter
			http.CloseNotifier
			deadliner
			fullDuplexEnabler
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 40/128
	{
		t.Log("http.ResponseWriter, http.CloseNotifier, deadliner, fullDuplexEnabler, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.CloseNotifier
			deadliner
			fullDuplexEnabler
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 41/128
	{
		t.Log("http.ResponseWriter, http.CloseNotifier, io.ReaderFrom")
		inner := struct {
			http.ResponseWriter
			http.CloseNotifier
			io.ReaderFrom
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 42/128
	{
		t.Log("http.ResponseWriter, http.CloseNotifier, io.ReaderFrom, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.CloseNotifier
			io.ReaderFrom
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 43/128
	{
		t.Log("http.ResponseWriter, http.CloseNotifier, io.ReaderFrom, fullDuplexEnabler")
		inner := struct {
			http.ResponseWriter
			http.CloseNotifier
			io.ReaderFrom
			fullDuplexEnabler
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 44/128
	{
		t.Log("http.ResponseWriter, http.CloseNotifier, io.ReaderFrom, fullDuplexEnabler, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.CloseNotifier
			io.ReaderFrom
			fullDuplexEnabler
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 45/128
	{
		t.Log("http.ResponseWriter, http.CloseNotifier, io.ReaderFrom, deadliner")
		inner := struct {
			http.ResponseWriter
			http.CloseNotifier
			io.ReaderFrom
			deadliner
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 46/128
	{
		t.Log("http.ResponseWriter, http.CloseNotifier, io.ReaderFrom, deadliner, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.CloseNotifier
			io.ReaderFrom
			deadliner
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 47/128
	{
		t.Log("http.ResponseWriter, http.CloseNotifier, io.ReaderFrom, deadliner, fullDuplexEnabler")
		inner := struct {
			http.ResponseWriter
			http.CloseNotifier
			io.ReaderFrom
			deadliner
			fullDuplexEnabler
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 48/128
	{
		t.Log("http.ResponseWriter, http.CloseNotifier, io.ReaderFrom, deadliner, fullDuplexEnabler, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.CloseNotifier
			io.ReaderFrom
			deadliner
			fullDuplexEnabler
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 49/128
	{
		t.Log("http.ResponseWriter, http.CloseNotifier, http.Hijacker")
		inner := struct {
			http.ResponseWriter
			http.CloseNotifier
			http.Hijacker
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 50/128
	{
		t.Log("http.ResponseWriter, http.CloseNotifier, http.Hijacker, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.CloseNotifier
			http.Hijacker
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 51/128
	{
		t.Log("http.ResponseWriter, http.CloseNotifier, http.Hijacker, fullDuplexEnabler")
		inner := struct {
			http.ResponseWriter
			http.CloseNotifier
			http.Hijacker
			fullDuplexEnabler
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 52/128
	{
		t.Log("http.ResponseWriter, http.CloseNotifier, http.Hijacker, fullDuplexEnabler, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.CloseNotifier
			http.Hijacker
			fullDuplexEnabler
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 53/128
	{
		t.Log("http.ResponseWriter, http.CloseNotifier, http.Hijacker, deadliner")
		inner := struct {
			http.ResponseWriter
			http.CloseNotifier
			http.Hijacker
			deadliner
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 54/128
	{
		t.Log("http.ResponseWriter, http.CloseNotifier, http.Hijacker, deadliner, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.CloseNotifier
			http.Hijacker
			deadliner
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 55/128
	{
		t.Log("http.ResponseWriter, http.CloseNotifier, http.Hijacker, deadliner, fullDuplexEnabler")
		inner := struct {
			http.ResponseWriter
			http.CloseNotifier
			http.Hijacker
			deadliner
			fullDuplexEnabler
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 56/128
	{
		t.Log("http.ResponseWriter, http.CloseNotifier, http.Hijacker, deadliner, fullDuplexEnabler, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.CloseNotifier
			http.Hijacker
			deadliner
			fullDuplexEnabler
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 57/128
	{
		t.Log("http.ResponseWriter, http.CloseNotifier, http.Hijacker, io.ReaderFrom")
		inner := struct {
			http.ResponseWriter
			http.CloseNotifier
			http.Hijacker
			io.ReaderFrom
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 58/128
	{
		t.Log("http.ResponseWriter, http.CloseNotifier, http.Hijacker, io.ReaderFrom, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.CloseNotifier
			http.Hijacker
			io.ReaderFrom
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 59/128
	{
		t.Log("http.ResponseWriter, http.CloseNotifier, http.Hijacker, io.ReaderFrom, fullDuplexEnabler")
		inner := struct {
			http.ResponseWriter
			http.CloseNotifier
			http.Hijacker
			io.ReaderFrom
			fullDuplexEnabler
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 60/128
	{
		t.Log("http.ResponseWriter, http.CloseNotifier, http.Hijacker, io.ReaderFrom, fullDuplexEnabler, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.CloseNotifier
			http.Hijacker
			io.ReaderFrom
			fullDuplexEnabler
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 61/128
	{
		t.Log("http.ResponseWriter, http.CloseNotifier, http.Hijacker, io.ReaderFrom, deadliner")
		inner := struct {
			http.ResponseWriter
			http.CloseNotifier
			http.Hijacker
			io.ReaderFrom
			deadliner
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 62/128
	{
		t.Log("http.ResponseWriter, http.CloseNotifier, http.Hijacker, io.ReaderFrom, deadliner, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.CloseNotifier
			http.Hijacker
			io.ReaderFrom
			deadliner
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 63/128
	{
		t.Log("http.ResponseWriter, http.CloseNotifier, http.Hijacker, io.ReaderFrom, deadliner, fullDuplexEnabler")
		inner := struct {
			http.ResponseWriter
			http.CloseNotifier
			http.Hijacker
			io.ReaderFrom
			deadliner
			fullDuplexEnabler
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 64/128
	{
		t.Log("http.ResponseWriter, http.CloseNotifier, http.Hijacker, io.ReaderFrom, deadliner, fullDuplexEnabler, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.CloseNotifier
			http.Hijacker
			io.ReaderFrom
			deadliner
			fullDuplexEnabler
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 65/128
	{
		t.Log("http.ResponseWriter, http.Flusher")
		inner := struct {
			http.ResponseWriter
			http.Flusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 66/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 67/128
	{
		t.Log("http.ResponseWriter, http.Flusher, fullDuplexEnabler")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			fullDuplexEnabler
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 68/128
	{
		t.Log("http.ResponseWriter, http.Flusher, fullDuplexEnabler, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			fullDuplexEnabler
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 69/128
	{
		t.Log("http.ResponseWriter, http.Flusher, deadliner")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			deadliner
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 70/128
	{
		t.Log("http.ResponseWriter, http.Flusher, deadliner, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			deadliner
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 71/128
	{
		t.Log("http.ResponseWriter, http.Flusher, deadliner, fullDuplexEnabler")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			deadliner
			fullDuplexEnabler
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 72/128
	{
		t.Log("http.ResponseWriter, http.Flusher, deadliner, fullDuplexEnabler, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			deadliner
			fullDuplexEnabler
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 73/128
	{
		t.Log("http.ResponseWriter, http.Flusher, io.ReaderFrom")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			io.ReaderFrom
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 74/128
	{
		t.Log("http.ResponseWriter, http.Flusher, io.ReaderFrom, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			io.ReaderFrom
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 75/128
	{
		t.Log("http.ResponseWriter, http.Flusher, io.ReaderFrom, fullDuplexEnabler")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			io.ReaderFrom
			fullDuplexEnabler
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 76/128
	{
		t.Log("http.ResponseWriter, http.Flusher, io.ReaderFrom, fullDuplexEnabler, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			io.ReaderFrom
			fullDuplexEnabler
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 77/128
	{
		t.Log("http.ResponseWriter, http.Flusher, io.ReaderFrom, deadliner")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			io.ReaderFrom
			deadliner
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 78/128
	{
		t.Log("http.ResponseWriter, http.Flusher, io.ReaderFrom, deadliner, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			io.ReaderFrom
			deadliner
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 79/128
	{
		t.Log("http.ResponseWriter, http.Flusher, io.ReaderFrom, deadliner, fullDuplexEnabler")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			io.ReaderFrom
			deadliner
			fullDuplexEnabler
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 80/128
	{
		t.Log("http.ResponseWriter, http.Flusher, io.ReaderFrom, deadliner, fullDuplexEnabler, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			io.ReaderFrom
			deadliner
			fullDuplexEnabler
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 81/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.Hijacker")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.Hijacker
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 82/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.Hijacker, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.Hijacker
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 83/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.Hijacker, fullDuplexEnabler")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.Hijacker
			fullDuplexEnabler
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 84/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.Hijacker, fullDuplexEnabler, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.Hijacker
			fullDuplexEnabler
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 85/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.Hijacker, deadliner")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.Hijacker
			deadliner
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 86/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.Hijacker, deadliner, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.Hijacker
			deadliner
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 87/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.Hijacker, deadliner, fullDuplexEnabler")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.Hijacker
			deadliner
			fullDuplexEnabler
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 88/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.Hijacker, deadliner, fullDuplexEnabler, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.Hijacker
			deadliner
			fullDuplexEnabler
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 89/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.Hijacker, io.ReaderFrom")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.Hijacker
			io.ReaderFrom
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 90/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.Hijacker, io.ReaderFrom, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.Hijacker
			io.ReaderFrom
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 91/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.Hijacker, io.ReaderFrom, fullDuplexEnabler")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.Hijacker
			io.ReaderFrom
			fullDuplexEnabler
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 92/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.Hijacker, io.ReaderFrom, fullDuplexEnabler, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.Hijacker
			io.ReaderFrom
			fullDuplexEnabler
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 93/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.Hijacker, io.ReaderFrom, deadliner")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.Hijacker
			io.ReaderFrom
			deadliner
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 94/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.Hijacker, io.ReaderFrom, deadliner, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.Hijacker
			io.ReaderFrom
			deadliner
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 95/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.Hijacker, io.ReaderFrom, deadliner, fullDuplexEnabler")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.Hijacker
			io.ReaderFrom
			deadliner
			fullDuplexEnabler
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 96/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.Hijacker, io.ReaderFrom, deadliner, fullDuplexEnabler, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.Hijacker
			io.ReaderFrom
			deadliner
			fullDuplexEnabler
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 97/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.CloseNotifier")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.CloseNotifier
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 98/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.CloseNotifier, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.CloseNotifier
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 99/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.CloseNotifier, fullDuplexEnabler")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.CloseNotifier
			fullDuplexEnabler
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 100/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.CloseNotifier, fullDuplexEnabler, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.CloseNotifier
			fullDuplexEnabler
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 101/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.CloseNotifier, deadliner")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.CloseNotifier
			deadliner
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 102/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.CloseNotifier, deadliner, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.CloseNotifier
			deadliner
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 103/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.CloseNotifier, deadliner, fullDuplexEnabler")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.CloseNotifier
			deadliner
			fullDuplexEnabler
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 104/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.CloseNotifier, deadliner, fullDuplexEnabler, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.CloseNotifier
			deadliner
			fullDuplexEnabler
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 105/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.CloseNotifier, io.ReaderFrom")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.CloseNotifier
			io.ReaderFrom
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 106/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.CloseNotifier, io.ReaderFrom, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.CloseNotifier
			io.ReaderFrom
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 107/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.CloseNotifier, io.ReaderFrom, fullDuplexEnabler")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.CloseNotifier
			io.ReaderFrom
			fullDuplexEnabler
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 108/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.CloseNotifier, io.ReaderFrom, fullDuplexEnabler, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.CloseNotifier
			io.ReaderFrom
			fullDuplexEnabler
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 109/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.CloseNotifier, io.ReaderFrom, deadliner")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.CloseNotifier
			io.ReaderFrom
			deadliner
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 110/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.CloseNotifier, io.ReaderFrom, deadliner, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.CloseNotifier
			io.ReaderFrom
			deadliner
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 111/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.CloseNotifier, io.ReaderFrom, deadliner, fullDuplexEnabler")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.CloseNotifier
			io.ReaderFrom
			deadliner
			fullDuplexEnabler
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 112/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.CloseNotifier, io.ReaderFrom, deadliner, fullDuplexEnabler, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.CloseNotifier
			io.ReaderFrom
			deadliner
			fullDuplexEnabler
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 113/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.CloseNotifier, http.Hijacker")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.CloseNotifier
			http.Hijacker
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 114/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.CloseNotifier, http.Hijacker, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.CloseNotifier
			http.Hijacker
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 115/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.CloseNotifier, http.Hijacker, fullDuplexEnabler")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.CloseNotifier
			http.Hijacker
			fullDuplexEnabler
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 116/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.CloseNotifier, http.Hijacker, fullDuplexEnabler, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.CloseNotifier
			http.Hijacker
			fullDuplexEnabler
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 117/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.CloseNotifier, http.Hijacker, deadliner")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.CloseNotifier
			http.Hijacker
			deadliner
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 118/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.CloseNotifier, http.Hijacker, deadliner, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.CloseNotifier
			http.Hijacker
			deadliner
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 119/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.CloseNotifier, http.Hijacker, deadliner, fullDuplexEnabler")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.CloseNotifier
			http.Hijacker
			deadliner
			fullDuplexEnabler
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 120/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.CloseNotifier, http.Hijacker, deadliner, fullDuplexEnabler, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.CloseNotifier
			http.Hijacker
			deadliner
			fullDuplexEnabler
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 121/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.CloseNotifier, http.Hijacker, io.ReaderFrom")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.CloseNotifier
			http.Hijacker
			io.ReaderFrom
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 122/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.CloseNotifier, http.Hijacker, io.ReaderFrom, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.CloseNotifier
			http.Hijacker
			io.ReaderFrom
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 123/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.CloseNotifier, http.Hijacker, io.ReaderFrom, fullDuplexEnabler")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.CloseNotifier
			http.Hijacker
			io.ReaderFrom
			fullDuplexEnabler
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 124/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.CloseNotifier, http.Hijacker, io.ReaderFrom, fullDuplexEnabler, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.CloseNotifier
			http.Hijacker
			io.ReaderFrom
			fullDuplexEnabler
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 125/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.CloseNotifier, http.Hijacker, io.ReaderFrom, deadliner")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.CloseNotifier
			http.Hijacker
			io.ReaderFrom
			deadliner
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 126/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.CloseNotifier, http.Hijacker, io.ReaderFrom, deadliner, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.CloseNotifier
			http.Hijacker
			io.ReaderFrom
			deadliner
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != false {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 127/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.CloseNotifier, http.Hijacker, io.ReaderFrom, deadliner, fullDuplexEnabler")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.CloseNotifier
			http.Hijacker
			io.ReaderFrom
			deadliner
			fullDuplexEnabler
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != false {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

	// combination 128/128
	{
		t.Log("http.ResponseWriter, http.Flusher, http.CloseNotifier, http.Hijacker, io.ReaderFrom, deadliner, fullDuplexEnabler, http.Pusher")
		inner := struct {
			http.ResponseWriter
			http.Flusher
			http.CloseNotifier
			http.Hijacker
			io.ReaderFrom
			deadliner
			fullDuplexEnabler
			http.Pusher
		}{}
		w := Wrap(inner, Hooks{})
		if _, ok := w.(http.ResponseWriter); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Flusher); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.CloseNotifier); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Hijacker); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(io.ReaderFrom); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(deadliner); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(fullDuplexEnabler); ok != true {
			t.Error("unexpected interface")
		}
		if _, ok := w.(http.Pusher); ok != true {
			t.Error("unexpected interface")
		}

		if w, ok := w.(Unwrapper); ok {
			if w.Unwrap() != inner {
				t.Error("w.Unwrap() failed")
			}
		} else {
			t.Error("Unwrapper interface not implemented")
		}
	}

}
